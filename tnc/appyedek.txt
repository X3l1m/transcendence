import React, { useEffect, useState } from 'react';

const redirectUri = 'http://localhost:3000'; // Callback URL'inizi buraya ekleyin

const App = () => {
  const [data, setData] = useState<Record<string, any> | null>(null);
  const [authCode, setAuthCode] = useState<string | null>(null);
  const [code , setCode] = useState<string | null>(null);
  const credentials = {
    clientId: 
  };

  useEffect(() => {
    const urlParam = new URLSearchParams(window.location.search);
    const code = urlParam.get('code');
    if (code) {
      setAuthCode(code);
    }
  }, []);

  useEffect(() => {
    const fetchToken = async (code: string) => {
      if (!credentials) return;
    setCode(code);
      try {
        const response = await fetch('https://api.intra.42.fr/oauth/token', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
          },
          body: new URLSearchParams({
            grant_type: 'client_credentials',
            client_id: credentials.clientId,
            client_secret: credentials.clientSecret,
          }),
        });
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        
        const result = await response.json();
        setData(result);
      } catch (error) {
        console.error(error);
      }
    };

    if (authCode && credentials) {
      fetchToken(authCode);
    }
  }, [authCode, credentials]);

  const handleAuthorize = () => {
    if (!credentials) return;
    window.location.href = `https://api.intra.42.fr/oauth/authorize?client_id=${credentials.clientId}&redirect_uri=${redirectUri}&response_type=code`;
  };

 
  const renderData = (data: any) => {
    return (
      <ul>
        {Object.keys(data).map((key) => (
          <li key={key}>
            <strong>{key}:</strong> {data[key].toString()}
          </li>
        ))}
      </ul>
    );
  };

  return (
    <div>
      {code ? code : 'token olusmadi'}
      <h1>OAuth2 Authorization</h1>
      {!authCode && <button onClick={handleAuthorize}>Authorize</button>}
      {data && 
        <div>
          <h2>Token Data</h2>
          {renderData(data)}
        </div>
      }
    </div>
  );
};


export default App;
